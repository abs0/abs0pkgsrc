# Local pkgsrc build configuration

ALLOW_VULNERABLE_PACKAGES=yes
CFLAGS+=-pipe
CREATE_WRKDIR_SYMLINK=yes
PKGSRCDIR?=/pkgsrc
# PKGSRC_SETENV=env -i
SU_CMD=doas sh -c
WRKOBJDIR?=/var/obj/pkg

. if ${MACHINE} != vax
PKG_DEVELOPER?=yes
PKGSRC_LOCKTYPE=sleep
. endif

.if !defined(STANDARD_BINARIES)

  USE_CPUFLAGS=yes
. if ${MACHINE} == i386
    CPU_DIR=
    CPU_FLAGS=-march=pentium-m
. elif ${MACHINE} == amd64
    CPU_DIR=
. endif # ${MACHINE} == i386

  ACCEPTABLE_LICENSES+= adobe-flashsupport-license
  ACCEPTABLE_LICENSES+= erlang-public-license
  ACCEPTABLE_LICENSES+= esdl-license
  ACCEPTABLE_LICENSES+= flash-license
  ACCEPTABLE_LICENSES+= generic-nonlicense
  ACCEPTABLE_LICENSES+= gnu-gpl-v2.1 # p7zip
  ACCEPTABLE_LICENSES+= intel-microcode-license
  ACCEPTABLE_LICENSES+= lame-license
  ACCEPTABLE_LICENSES+= libdvdcss-license
  ACCEPTABLE_LICENSES+= mame-license
  ACCEPTABLE_LICENSES+= mozilla-trademark-license
  ACCEPTABLE_LICENSES+= ms-ttf-license
  ACCEPTABLE_LICENSES+= opera-1200-license
  ACCEPTABLE_LICENSES+= oracle-binary-code-license
  ACCEPTABLE_LICENSES+= server-side-public-license
  ACCEPTABLE_LICENSES+= ubiquiti-license
  ACCEPTABLE_LICENSES+= ubuntu-font-license
  ACCEPTABLE_LICENSES+= unrar-license # p7zip
  ACCEPTABLE_LICENSES+= vera-ttf-license
  ACCEPTABLE_LICENSES+= vim-license
  ACCEPTABLE_LICENSES+= yed-license

  # Grr.. agpl ghostscript
  ACCEPTABLE_LICENSES+= gnu-agpl-v3

  # Default versions
  # JPEG_DEFAULT=libjpeg-turbo
  PKG_JVM_DEFAULT=openjdk17
  PGSQL_VERSION_DEFAULT=15

  # PERL5_SITEBIN=/usr/local/bin
  # PERL5_SITEPREFIX=/usr/local/lib/perl5/site_perl
  LIBDVDCSS_MASTER_SITES=http://download.videolan.org/pub/videolan/libdvdcss/
  PAPERSIZE=A4
  PGSQL_VERSION_DEFAULT=15
  PKG_OPTIONS.doxygen=-latex
  PKG_OPTIONS.exim=exim-auth-dovecot exim-lookup-mysql
  PKG_OPTIONS.firefox=official-mozilla-branding
  PKG_OPTIONS.nginx=dav stream-ssl-preread
  PKG_OPTIONS.nmap=lua
  PKG_OPTIONS.openttd=ttd-data
  PKG_OPTIONS.p5-HTML-Mason=-modperl
  PKG_OPTIONS.pari=-doc
  PKG_OPTIONS.roundcube=pgsql nginx
  PKG_OPTIONS.thunderbird=official-mozilla-branding
  PKG_OPTIONS.unifi=mongodb4

  PKG_RCD_SCRIPTS=yes

. if ${MACHINE} == vax
    PKG_OPTIONS.SDL=-arts -esound -nas -pulseaudio
. endif

  PKG_NEVER_BUILD=\
    devel/libiberty \
    security/openssh

. if !empty(PKG_NEVER_BUILD:M${PKGPATH})
    BROKEN="Local config set to never build"
. endif

  PKG_USE_ETC=\
    databases/mariadb106-client \
    databases/mariadb106-server \
    emulators/qemu \
    lang/pear \
    lang/php74 \
    mail/alpine \
    mail/dovecot2 \
    mail/exim \
    mail/roundcube \
    mail/spamassassin \
    net/dante \
    net/ddclient \
    net/dhcpcd \
    net/dnsmasq \
    net/openvpn \
    net/samba4 \
    net/syncthing \
    net/transmission \
    net/vsftpd \
    print/cups \
    print/cups-base \
    print/cups-filters \
    print/cups-pdf \
    print/libcups \
    print/py-cups \
    security/doas \
    security/msu \
    security/msudir \
    security/py-certbot \
    security/sudo \
    shells/zsh \
    sysutils/ansible \
    sysutils/ansible-base \
    sysutils/dirvish \
    sysutils/ups-nut \
    sysutils/ups-nut-usb \
    sysutils/xentools411 \
    www/ap-php \
    www/apache24 \
    www/nginx \
    www/nginx-devel \
    www/squid \
    www/thttpd \
    www/tinyproxy \
    x11/slim \
    x11/xdm

. if !empty(PKG_USE_ETC:M${PKGPATH})
    PKG_SYSCONFBASE?=/etc
    SUBST_NOOP_OK=yes
. endif

.endif 	# STANDARD_BINARIES

.if exists(/mono/adm)
  PKGCHK_CONF?=${PKGSRCDIR}/local/config/pkgchk.mono
.else
  PKGCHK_CONF?=${PKGSRCDIR}/local/config/pkgchk.conf
.endif

# LINTPKGSRC definition should come after normal to workaround lintpkgsrc issue
.ifndef LINTPKGSRC
  OS_VERSION_=${OS_VERSION:C/_.*//}
  PACKAGES=${PKGSRCDIR}/packages/${OPSYS}-${OS_VERSION_}-${MACHINE_ARCH}${CPU_DIR}
.else
  PACKAGES=${PKGSRCDIR}/packages
.endif


.ifdef DEBUG_BUILD
CFLAGS+=	-g
LDFLAGS+=	-g
INSTALL_UNSTRIPPED=yes
.endif
