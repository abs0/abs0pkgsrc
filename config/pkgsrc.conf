# Build configuration which will not affect generated binaries

ALLOW_VULNERABLE_PACKAGES=yes
CFLAGS+=-pipe
CREATE_WRKDIR_SYMLINK=yes
OBJHOME	= /var/obj
PKGSRCDIR?=/pkgsrc
SU_CMD=sudo sh -c
UPDATE_TARGET=package-install
WRKOBJDIR?=${OBJHOME}/pkg

# Use all available CPUs (could add +1 to keep things extra-busy)
.if defined(OPSYS)

. if ${OPSYS} == NetBSD
PKGSRC_LOCKTYPE=sleep
.  if ! defined(NCPU)
NCPU!=/sbin/sysctl -n hw.ncpu
.  endif

. elif ${OPSYS} == Linux
.  if ! defined(NCPU)
NCPU!=awk '/processor/{p=$$3}END{print p}' /proc/cpuinfo
.  endif

. elif ${OPSYS} == Darwin
PKGSRC_LOCKTYPE=sleep
STANDARD_BINARIES=1
. endif

. if ${OPSYS} == NetBSD && ${NCPU} > 1
MAKE_JOBS=${NCPU}
. endif
.endif

.if !defined(STANDARD_BINARIES)

. if ${MACHINE} == i386
CPU_DIR=
CPU_FLAGS=-march=pentium-m
. elif ${MACHINE} == amd64
CPU_DIR=
. endif # ${MACHINE} == i386
USE_CPUFLAGS=yes

ACCEPTABLE_LICENSES+= adobe-acrobat-license
ACCEPTABLE_LICENSES+= artistic-2.0
ACCEPTABLE_LICENSES+= eclipse-license
ACCEPTABLE_LICENSES+= flash-license
ACCEPTABLE_LICENSES+= generic-nonlicense
ACCEPTABLE_LICENSES+= gnu-lgpl-v2.1
ACCEPTABLE_LICENSES+= gnu-lgpl-v3
ACCEPTABLE_LICENSES+= google-earth-license
ACCEPTABLE_LICENSES+= intel-ipw-license
ACCEPTABLE_LICENSES+= lame-license
ACCEPTABLE_LICENSES+= lha-license
ACCEPTABLE_LICENSES+= libdvdcss-license
ACCEPTABLE_LICENSES+= majordomo-license
ACCEPTABLE_LICENSES+= mame-license
ACCEPTABLE_LICENSES+= mozilla-trademark-license
ACCEPTABLE_LICENSES+= mpg123-license
ACCEPTABLE_LICENSES+= mplayer-codec-license
ACCEPTABLE_LICENSES+= ms-ttf-license
ACCEPTABLE_LICENSES+= no-commercial-use
ACCEPTABLE_LICENSES+= openmotif-license
ACCEPTABLE_LICENSES+= opera-850-license
ACCEPTABLE_LICENSES+= pine-license
ACCEPTABLE_LICENSES+= public-domain
ACCEPTABLE_LICENSES+= quakedata-license
ACCEPTABLE_LICENSES+= roundcube
ACCEPTABLE_LICENSES+= shareware
ACCEPTABLE_LICENSES+= skype-license
ACCEPTABLE_LICENSES+= sun-jdk6-license
ACCEPTABLE_LICENSES+= sun-jre6-license
ACCEPTABLE_LICENSES+= sun-jrl-16-license
ACCEPTABLE_LICENSES+= sun-openlook-license
ACCEPTABLE_LICENSES+= truecrypt-license
ACCEPTABLE_LICENSES+= ttd-pseudolicense
ACCEPTABLE_LICENSES+= unarj-license
ACCEPTABLE_LICENSES+= unrar-license
ACCEPTABLE_LICENSES+= vmware-license
ACCEPTABLE_LICENSES+= xv-license
ACCEPTABLE_LICENSES+= zoo-license

# Default versions
JPEG_DEFAULT=libjpeg-turbo
MYSQL_VERSION_DEFAULT=55
PGSQL_VERSION_DEFAULT=90
PHP_VERSION_DEFAULT=53
PYTHON_VERSION_DEFAULT=27

APACHE_MODULES+=logio
LIBDVDCSS_MASTER_SITES=http://download.videolan.org/pub/videolan/libdvdcss/
MAJORDOMO_HOMEDIR=/var/majordomo
PAPERSIZE=A4
# PERL5_SITEBIN=/usr/local/bin
# PERL5_SITEPREFIX=/usr/local/lib/perl5/site_perl
PKG_COMPRESSION=bzip2
PKG_DEFAULT_OPTIONS=pulseaudio sun-jre-jce faac avahi
PKG_OPTIONS.Transmission=qt
PKG_OPTIONS.bugzilla=pgsql bugzilla-descriptions bugzilla-imagemagick bugzilla-graphicalreports bugzilla-patchviewer
PKG_OPTIONS.doxygen=-latex
PKG_OPTIONS.dvdrip=-rar
PKG_OPTIONS.exim=exim-auth-dovecot
PKG_OPTIONS.firefox=official-mozilla-branding
PKG_OPTIONS.freetype2=subpixel
PKG_OPTIONS.gnash=kde
PKG_OPTIONS.mediawiki=pgsql
PKG_OPTIONS.openoffice3=lang-en-GB
PKG_OPTIONS.openttd=ttd-data
PKG_OPTIONS.p5-HTML-Mason=-modperl
PKG_OPTIONS.pari=-doc
PKG_OPTIONS.roundcube=pgsql
PKG_OPTIONS.thunderbird=mozilla-enigmail mozilla-lightning official-mozilla-branding
PKG_OPTIONS.tidy=-doc
PKG_OPTIONS.vsftpd=ssl
PKG_RCD_SCRIPTS=yes

. if ${MACHINE} == amd64 || ${MACHINE} == i386 || ${MACHINE} == x86_64
X11_TYPE=modular
. endif

. if defined(PKGPATH)
.  if (${PKGPATH} == multimedia/mplayer || ${PKGPATH} == multimedia/gmplayer)
CPU_FLAGS+=-O3 -ffast-math -fomit-frame-pointer
.  endif
. endif

PKG_USE_ETC=\
    audio/musicpd \
    databases/mysql51-client \
    databases/mysql51-server \
    databases/mysql55-client \
    databases/mysql55-server \
    lang/pear \
    lang/php5 \
    lang/php53 \
    mail/dovecot2 \
    mail/exim \
    mail/re-alpine \
    mail/roundcube \
    mail/spamassassin \
    net/dante \
    net/openvpn \
    net/samba35 \
    net/vsftpd \
    security/msu \
    security/msudir \
    security/nessus \
    security/nessus-core \
    security/nessus-libraries \
    security/nessus-plugins \
    security/sudo \
    shells/zsh \
    sysutils/dirvish \
    sysutils/munin-node \
    sysutils/munin-server \
    sysutils/ups-nut \
    www/apache22 \
    www/squid \
    www/thttpd \
    x11/xdm
. if !empty(PKG_USE_ETC:M${PKGPATH})
PKG_SYSCONFBASE?=/etc
. endif

.endif 	# STANDARD_BINARIES

PKG_DEVELOPER=yes

.if exists(/mono/adm)
PKGCHK_CONF?=${PKGSRCDIR}/local/config/pkgchk.mono
.else
PKGCHK_CONF?=${PKGSRCDIR}/local/config/pkgchk.conf
.endif

# LINTPKGSRC definition should come after normal to workaround lintpkgsrc issue
.ifndef LINTPKGSRC
OS_VERSION_=${OS_VERSION:C/_.*//}
PACKAGES=${PKGSRCDIR}/packages/${OPSYS}-${OS_VERSION_}-${LOWER_ARCH}${CPU_DIR}
.else
PACKAGES=${PKGSRCDIR}/packages
.endif
