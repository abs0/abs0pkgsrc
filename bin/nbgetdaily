#!/bin/sh -e

download_sets()
    {
    downloadbase=$1
    dir=$2
    cd $dir
    sets=$(ftp -o - $downloadbase | sed -n 's/.*<a href="\([^"]*z\)".*/\1/p')
    if [ -z "$sets" ]; then
        echo "No sets found in $downloadbase"
        rmdir $dir
        exit 1
    fi
    for f in $sets ; do
        if [ -f $(txz_name $f) ] ; then
            echo "$(txz_name $f) already present"
        else
	    ftp -R $downloadbase$f
        fi
    done
    }

find_latest_directory()
{
    ftp -o - $1|awk -F'"' '/a href.*Z/{u=$2}END{print u}'
}

parseurl()
    {
    url=$1
    echo $url | awk -v arch=$machine_arch -F/ '
	{
	if ($6 == "HEAD")
	    { print "tag=current" }
	else
	    {
	    tag=$6
	    sub("netbsd-", "", tag)
	    print "tag="tag
	    }
	print "date=" substr($7,1,4) "-" substr($7,5,2) "-" substr($7,7,2)
        if ($8 != "") {
          arch=$8
        }
	print "arch="arch
	print "download="$1"/"$2"/"$3"/"$4"/"$5"/"$6"/"$7"/"arch"/binary/sets/"
	}
'
    }

recompress()
    {
    if ! ls *.tgz >/dev/null 2>&1 ; then
        echo "No files found to recompress"
        return
    fi
    echo -n "recompress:";
    for f in *.tgz ; do
	base=$(echo $f|sed 's/\.tgz$//')
	echo -n " $base"
	zcat $f | xz -9    > $base.txz.tmp && mv $base.txz.tmp $base.txz
	rm -f $f
    done
    echo
    }

txz_name()
{
      echo "$@" | sed 's/\.tgz$/.txz/'
}

while getopts hm:t: f; do
    case $f in
	h) opt_h=1				;;
	m) opt_m="$OPTARG"			;;
	t) opt_t="$OPTARG"			;;
    esac
done
shift $(expr $OPTIND - 1)

if [ -n "$opt_h" ] ; then
	echo "Usage: nbgetdaily [opts] [url]
opts:   -h      This help
	-t tag  Set OS tag to download (default to running OS)
	-t mach Set machine arch (default from uname -m: $(uname -m))
";
    exit
fi

base=/opt/netbsd/arch

if [ -n "$1" ] ; then
    url=$1
    case $url in
        */)
	    ;;
        *)
	    url=$url/
	    ;;
    esac
else
    if [ -n "$opt_m" ]; then
        machine_arch=$opt_m
    else
        machine_arch=$(uname -m)
    fi

    if [ -n "$opt_t" ]; then
        case "$t" in
          netbsd-* | head)
            rev=$opt_t
            ;;
          *)
            rev=netbsd-$opt_t
            ;;
        esac
    else
        rev=netbsd-$(uname -r | sed 's/\..*//')
    fi

    echo -n "Latest: "
    urlbase=https://nycdn.netbsd.org/pub/NetBSD-daily/$rev
    dir=$(find_latest_directory $urlbase)
    if [ -z "$dir" ];then
        urlbase=https://nyftp.netbsd.org/pub/NetBSD-daily/$rev
        dir=$(find_latest_directory $urlbase)
        if [ -z "$dir" ];then
            echo "Unable to determine latest dir from $urlbase"
            exit 1
        fi
    fi

    url=$urlbase/$dir
    echo $url
fi

eval $(parseurl $url)

dir=$base/$tag-$arch-$date
if [ -z "$tag" -o -z "$arch" -o -z "$date" ] ; then
    echo "$dir has blank tag, arch and/or date"
    parseurl $url
    exit 1
fi

echo "downloading into $dir"
mkdir -p $dir
cd $dir

download_sets $download $dir
recompress
